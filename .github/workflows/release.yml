name: Windows Release with SLSA3, Checksums, and GPG Signing

on:
  release:
    types: [published]

jobs:
  build-windows:
    name: Build Windows Binary with Provenance
    runs-on: windows-latest
    permissions:
      id-token: write
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Build binary
        run: |
          pyinstaller --onefile main.py
          mkdir dist-out
          Copy-Item dist\main.exe dist-out\dither.exe

      - name: Generate SHA256 checksum
        shell: bash
        run: |
          cd dist-out
          sha256sum dither.exe > dither.exe.sha256

      - name: Import GPG key
        shell: bash
        run: |
          echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg --batch --import
          echo "pinentry-mode loopback" >> ~/.gnupg/gpg.conf
          echo "allow-loopback-pinentry" >> ~/.gnupg/gpg-agent.conf
          gpgconf --kill gpg-agent

      - name: Sign checksum with GPG
        shell: bash
        run: |
          cd dist-out
          gpg --batch --yes --pinentry-mode loopback --passphrase "${{ secrets.GPG_PASSPHRASE }}" \
            --armor --output dither.exe.sha256.asc --detach-sign dither.exe.sha256

      - name: Generate SLSA3 provenance
        uses: slsa-framework/slsa-github-generator@v2.1.0
        with:
          base64-subjects: false
          artifact-path: dist-out/dither.exe
          output-path: dist-out/dither.attestation

      - name: Install cosign for provenance verification
        uses: sigstore/cosign-installer@v3.5.0

      - name: Verify SLSA provenance
        run: |
          cosign verify-attestation dist-out/dither.exe \
            --type slsaprovenance \
            --certificate-identity "https://github.com/${{ github.repository }}/.github/workflows/${{ github.workflow }}@refs/heads/${{ github.ref_name }}" \
            --certificate-oidc-issuer https://token.actions.githubusercontent.com

      - name: Upload artifacts to release
        if: success()
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist-out/dither.exe
            dist-out/dither.exe.sha256
            dist-out/dither.exe.sha256.asc
            dist-out/dither.attestation
